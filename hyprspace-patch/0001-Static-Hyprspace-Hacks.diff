From 97d6b20c1af4a62f4bcc3ca68fe892253c936558 Mon Sep 17 00:00:00 2001
From: jordan Johnston <johnstonljordan@gmail.com>
Date: Mon, 15 Apr 2024 11:10:38 -0500
Subject: [PATCH] Static Hyprspace Hacks

 -> Hacks to make Hyprspace static with my n7n-AGS-Shell

   - Set the currentHeight to my TopBar/Panel size
   - Drop 'HACK: recalculate other workspaces without reserved area'
   - Change rendering handling

Signed-off-by: jordan Johnston <johnstonljordan@gmail.com>
---
 src/Layout.cpp | 12 ++----------
 src/main.cpp   | 14 ++++----------
 2 files changed, 6 insertions(+), 20 deletions(-)

diff --git a/src/Layout.cpp b/src/Layout.cpp
index 95c6859..59aa26f 100644
--- a/src/Layout.cpp
+++ b/src/Layout.cpp
@@ -3,7 +3,7 @@
 
 // FIXME: preserve original workspace rules
 void CHyprspaceWidget::updateLayout() {
-    const auto currentHeight = Config::panelHeight + Config::reservedArea;
+    const auto currentHeight = 36;
     const auto pMonitor = getOwner();
     // reset reserved areas
     g_pHyprRenderer->arrangeLayersForMonitor(ownerID);
@@ -17,14 +17,6 @@ void CHyprspaceWidget::updateLayout() {
     if (active) {
         const auto oActiveWorkspace = pMonitor->activeWorkspace;
 
-        for (auto& ws : g_pCompositor->m_vWorkspaces) { // HACK: recalculate other workspaces without reserved area
-            if (ws->m_iMonitorID == ownerID && ws->m_iID != oActiveWorkspace->m_iID) {
-                pMonitor->activeWorkspace = ws;
-                const auto curRules = std::to_string(pMonitor->activeWorkspaceID()) + ", gapsin:" + PGAPSIN->toString() + ", gapsout:" + PGAPSOUT->toString();
-                if (Config::overrideGaps) g_pConfigManager->handleWorkspaceRules("", curRules);
-                g_pLayoutManager->getCurrentLayout()->recalculateMonitor(ownerID);
-            }
-        }
         pMonitor->activeWorkspace = oActiveWorkspace;
         pMonitor->vecReservedTopLeft.y = currentHeight;
         const auto curRules = std::to_string(pMonitor->activeWorkspaceID()) + ", gapsin:" + std::to_string(Config::gapsIn) + ", gapsout:" + std::to_string(Config::gapsOut);
@@ -41,4 +33,4 @@ void CHyprspaceWidget::updateLayout() {
             }
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main.cpp b/src/main.cpp
index 3348506..cec1c7d 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -85,13 +85,13 @@ void onRender(void* thisptr, SCallbackInfo& info, std::any args) {
     const auto renderStage = std::any_cast<eRenderStage>(args);
 
     // refresh layout after scheduled recalculation on monitors were carried out in renderMonitor
-    if (renderStage == eRenderStage::RENDER_PRE) {
+    if (renderStage == eRenderStage::RENDER_POST) {
         if (g_layoutNeedsRefresh) {
             refreshWidgets();
             g_layoutNeedsRefresh = false;
         }
     }
-    else if (renderStage == eRenderStage::RENDER_PRE_WINDOWS) {
+    else if (renderStage == eRenderStage::RENDER_POST_WINDOWS) {
 
 
         const auto widget = getWidgetForMonitor(g_pHyprOpenGL->m_RenderData.pMonitor);
@@ -100,7 +100,7 @@ void onRender(void* thisptr, SCallbackInfo& info, std::any args) {
                 widget->draw();
                 if (g_pInputManager->currentlyDraggedWindow && widget->isActive()) {
                     g_oAlpha = g_pInputManager->currentlyDraggedWindow->m_fActiveInactiveAlpha.goal();
-                    g_pInputManager->currentlyDraggedWindow->m_fActiveInactiveAlpha.setValueAndWarp(Config::dragAlpha);
+                    // g_pInputManager->currentlyDraggedWindow->m_fActiveInactiveAlpha.setValueAndWarp(Config::dragAlpha);
                 }
                 else g_oAlpha = -1;
             }
@@ -108,12 +108,6 @@ void onRender(void* thisptr, SCallbackInfo& info, std::any args) {
         else g_oAlpha = -1;
 
     }
-    else if (renderStage == eRenderStage::RENDER_POST_WINDOWS) {
-        if (g_oAlpha != -1 && g_pInputManager->currentlyDraggedWindow) {
-            g_pInputManager->currentlyDraggedWindow->m_fActiveInactiveAlpha.setValueAndWarp(g_oAlpha);
-        }
-        g_oAlpha = -1;
-    }
 }
 
 // event hook, currently this is only here to re-hide top layer panels on workspace change
-- 
2.44.0
