From 5fea9b9defd979784229ccc765b77576a704b634 Mon Sep 17 00:00:00 2001
From: jordan Johnston <johnstonljordan@gmail.com>
Date: Thu, 18 Apr 2024 16:27:56 -0500
Subject: [PATCH 2/6] n7n-AGS-Shell Integration Hacks

Signed-off-by: jordan Johnston <johnstonljordan@gmail.com>
---
 src/Layout.cpp | 10 +---------
 1 file changed, 1 insertion(+), 9 deletions(-)

diff --git a/src/Layout.cpp b/src/Layout.cpp
index e7be125..c3e7b2c 100644
--- a/src/Layout.cpp
+++ b/src/Layout.cpp
@@ -6,7 +6,7 @@ void CHyprspaceWidget::updateLayout() {
 
     if (!Config::affectStrut) return;
 
-    const auto currentHeight = Config::panelHeight + Config::reservedArea;
+    const auto currentHeight = Config::reservedArea;
     const auto pMonitor = getOwner();
 
     // reset reserved areas
@@ -25,14 +25,6 @@ void CHyprspaceWidget::updateLayout() {
     if (active) {
         const auto oActiveWorkspace = pMonitor->activeWorkspace;
 
-        for (auto& ws : g_pCompositor->m_vWorkspaces) { // HACK: recalculate other workspaces without reserved area
-            if (ws->m_iMonitorID == ownerID && ws->m_iID != oActiveWorkspace->m_iID) {
-                pMonitor->activeWorkspace = ws;
-                const auto curRules = std::to_string(pMonitor->activeWorkspaceID()) + ", gapsin:" + PGAPSIN->toString() + ", gapsout:" + PGAPSOUT->toString();
-                if (Config::overrideGaps) g_pConfigManager->handleWorkspaceRules("", curRules);
-                g_pLayoutManager->getCurrentLayout()->recalculateMonitor(ownerID);
-            }
-        }
         pMonitor->activeWorkspace = oActiveWorkspace;
         if (!Config::onBottom)
             pMonitor->vecReservedTopLeft.y = currentHeight;
diff --git a/src/main.cpp b/src/main.cpp
index 8a61a9b..4155c2a 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -92,22 +92,22 @@ void onRender(void* thisptr, SCallbackInfo& info, std::any args) {
     const auto renderStage = std::any_cast<eRenderStage>(args);
 
     // refresh layout after scheduled recalculation on monitors were carried out in renderMonitor
-    if (renderStage == eRenderStage::RENDER_PRE) {
+    if (renderStage == eRenderStage::RENDER_POST) {
         if (g_layoutNeedsRefresh) {
             refreshWidgets();
             g_layoutNeedsRefresh = false;
         }
     }
-    else if (renderStage == eRenderStage::RENDER_PRE_WINDOWS) {
+    else if (renderStage == eRenderStage::RENDER_POST_WINDOWS) {
 
 
         const auto widget = getWidgetForMonitor(g_pHyprOpenGL->m_RenderData.pMonitor);
         if (widget.get())
             if (widget->getOwner()) {
-                //widget->draw();
+                widget->draw();
                 if (g_pInputManager->currentlyDraggedWindow && widget->isActive()) {
                     g_oAlpha = g_pInputManager->currentlyDraggedWindow->m_fActiveInactiveAlpha.goal();
-                    g_pInputManager->currentlyDraggedWindow->m_fActiveInactiveAlpha.setValueAndWarp(0); // HACK: hide dragged window for the actual pass
+                    //g_pInputManager->currentlyDraggedWindow->m_fActiveInactiveAlpha.setValueAndWarp(0); // HACK: hide dragged window for the actual pass
                 }
                 else g_oAlpha = -1;
             }
@@ -115,24 +115,6 @@ void onRender(void* thisptr, SCallbackInfo& info, std::any args) {
         else g_oAlpha = -1;
 
     }
-    else if (renderStage == eRenderStage::RENDER_POST_WINDOWS) {
-
-        const auto widget = getWidgetForMonitor(g_pHyprOpenGL->m_RenderData.pMonitor);
-
-        if (widget.get())
-            if (widget->getOwner()) {
-                widget->draw();
-                if (g_oAlpha != -1 && g_pInputManager->currentlyDraggedWindow) {
-                    g_pInputManager->currentlyDraggedWindow->m_fActiveInactiveAlpha.setValueAndWarp(Config::dragAlpha);
-                    timespec time;
-                    clock_gettime(CLOCK_MONOTONIC, &time);
-                    (*(tRenderWindow)pRenderWindow)(g_pHyprRenderer.get(), g_pInputManager->currentlyDraggedWindow, widget->getOwner(), &time, true, RENDER_PASS_MAIN, false, false);
-                    g_pInputManager->currentlyDraggedWindow->m_fActiveInactiveAlpha.setValueAndWarp(g_oAlpha);
-                }
-                g_oAlpha = -1;
-            }
-
-    }
 }
 
 // event hook, currently this is only here to re-hide top layer panels on workspace change
diff --git a/src/Overview.cpp b/src/Overview.cpp
index 68987a9..a0d4677 100644
--- a/src/Overview.cpp
+++ b/src/Overview.cpp
@@ -44,23 +44,6 @@ void CHyprspaceWidget::show() {
         }
     }
 
-    // hide top and overlay layers
-    // FIXME: ensure input is disabled for hidden layers
-    if (oLayerAlpha.empty() && Config::hideRealLayers) {
-        for (auto& ls : owner->m_aLayerSurfaceLayers[ZWLR_LAYER_SHELL_V1_LAYER_TOP]) {
-            //ls->startAnimation(false);
-            oLayerAlpha.emplace_back(std::make_tuple(ls.get(), ls->alpha.goal()));
-            ls->alpha = 0.f;
-            ls->fadingOut = true;
-        }
-        for (auto& ls : owner->m_aLayerSurfaceLayers[ZWLR_LAYER_SHELL_V1_LAYER_OVERLAY]) {
-            //ls->startAnimation(false);
-            oLayerAlpha.emplace_back(std::make_tuple(ls.get(), ls->alpha.goal()));
-            ls->alpha = 0.f;
-            ls->fadingOut = true;
-        }
-    }
-
     active = true;
 
     // panel offset should be handled by swipe event when swiping
@@ -77,27 +60,6 @@ void CHyprspaceWidget::hide() {
     auto owner = getOwner();
     if (!owner) return;
 
-    // restore layer state
-    for (auto& ls : owner->m_aLayerSurfaceLayers[ZWLR_LAYER_SHELL_V1_LAYER_TOP]) {
-        if (!ls->readyToDelete && ls->mapped && ls->fadingOut) {
-            auto oAlpha = std::find_if(oLayerAlpha.begin(), oLayerAlpha.end(), [&] (const auto& tuple) {return std::get<0>(tuple) == ls.get();});
-            if (oAlpha != oLayerAlpha.end()) {
-                ls->fadingOut = false;
-                ls->alpha = std::get<1>(*oAlpha);
-            }
-            //ls->startAnimation(true);
-        }
-    }
-    for (auto& ls : owner->m_aLayerSurfaceLayers[ZWLR_LAYER_SHELL_V1_LAYER_OVERLAY]) {
-        if (!ls->readyToDelete && ls->mapped && ls->fadingOut) {
-            auto oAlpha = std::find_if(oLayerAlpha.begin(), oLayerAlpha.end(), [&] (const auto& tuple) {return std::get<0>(tuple) == ls.get();});
-            if (oAlpha != oLayerAlpha.end()) {
-                ls->fadingOut = false;
-                ls->alpha = std::get<1>(*oAlpha);
-            }
-            //ls->startAnimation(true);
-        }
-    }
     oLayerAlpha.clear();
 
     // restore fullscreen state
-- 
2.44.0
